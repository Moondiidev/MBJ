{"version":3,"sources":["./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/head-error/head-error.component.ts","./src/app/head-error/head-error.component.html","./src/app/head-error/header-error.service.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { signupData } from './signupData.interface';\nimport { HeaderErrorService } from './../head-error/header-error.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService, AuthResponseData } from './auth.service';\nimport { Subscription, Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit, OnDestroy {\n  authForm: FormGroup;\n  error: string = null;\n  isLoading: boolean = false;\n  isLogIn: boolean = false;\n  passwordShow: boolean = false;\n  checkingUserName: boolean = false;\n  signupData: signupData = {\n    userName: '',\n    joinDate: '',\n    email: '',\n    password: ''\n  };\n  errorMode: string;\n  uniqueUserTimeout;\n  userNameSub: Subscription;\n  accessDeniedError: boolean = true;\n  constructor(private route: ActivatedRoute, private authService: AuthService, private router: Router, private headerErrorService: HeaderErrorService) { }\n\n  ngOnInit(): void {\n    //See if user came from access denied error\n    this.accessDeniedError = !!this.route.snapshot.queryParamMap.get('access');\n    if (this.accessDeniedError) {\n      this.headerErrorService.headerErrorMsg.next('Энэ хуудас луу орохын тулд та нэвтэрсэн байх шаардлагатай.');\n    }\n\n    //Decide whether form should be signUp or logIn\n    this.route.params.subscribe((params: Params) => {\n      this.isLogIn = 'logIn' === params['isLogIn'] ? true : false;\n      this.error = null;\n      if (this.isLogIn) {\n        this.authForm = new FormGroup({\n          'email': new FormControl(null, [Validators.required, Validators.email]),\n          'password': new FormControl(null, Validators.required),\n        });\n      } else {\n        this.authForm = new FormGroup({\n          'userName': new FormControl(null, [Validators.required, Validators.minLength(6), Validators.pattern('^[A-Za-z]+(?:[_A-Za-z0-9])*$')], this.uniqueUserName.bind(this)),\n          'email': new FormControl(null, [Validators.required, Validators.email]),\n          'password': new FormControl(null, [Validators.required, Validators.minLength(8)]),\n        });\n      }\n    })\n  }\n  uniqueUserName(control: FormControl): Promise<any> | Observable<any> {\n    clearTimeout(this.uniqueUserTimeout);\n    let allUsedUserNames: Array<string>;\n    const promise = new Promise<any>((resolve, reject) => {\n      //Time delay allows some time after user stops typing in order to check the validation. Otherwise,\n      // validation gets run many times whenever new char is typed or deleted\n      this.uniqueUserTimeout = setTimeout(() => {\n        this.checkingUserName = true;\n        //Get all used user names stored on database\n        this.userNameSub = this.authService.getUserNames().subscribe(names => {\n          allUsedUserNames = names;\n          console.log(allUsedUserNames);\n          if (allUsedUserNames !== null) {\n            for (let i = 0; i < allUsedUserNames.length; i++) {\n              if (allUsedUserNames[i].toLowerCase() === this.authForm.get('userName').value.toLowerCase()) {\n                resolve({ 'isNotUniqueUserName': true });\n                this.checkingUserName = false;\n                break;\n              }\n            }\n            resolve(null);\n            this.checkingUserName = false;\n          } else {\n            resolve(null);\n            this.checkingUserName = false;\n          }\n        });\n      }, 700)\n    })\n    return promise;\n  }\n  // validateUserName(control: FormControl): {[s:string] : boolean} {\n  //   let name: string = this.authForm.get('userName').value;\n  //   if(name[0].)\n  //   // if (/\\s/.test(this.authForm.get('userName').value)) {\n  //   //   // It has any kind of whitespace\n  //   //   return {'unwantedCharacters':true};\n  //   // }\n  // }\n  togglePasswordVisibility() {\n    this.passwordShow = !this.passwordShow;\n  }\n  rememberMeToggle() {\n    this.authService.rememberToggle = !this.authService.rememberToggle;\n  }\n  ngOnDestroy() {\n    if (this.userNameSub !== undefined) {\n      this.userNameSub.unsubscribe();\n    }\n    //Removes error if it was present\n    if (this.accessDeniedError) {\n      this.headerErrorService.headerErrorMsg.next(null);\n    }\n  }\n  onSubmit() {\n    //If not valid, exit\n    if (!this.authForm.valid) {\n      return;\n    }\n    //Save all data to firebase database\n    const email = this.authForm.get('email').value;\n    const password = this.authForm.get('password').value;\n    if (!this.isLogIn) {\n      this.signupData.userName = this.authForm.get('userName').value;\n      const today = new Date();\n      this.signupData.joinDate = `${today.getFullYear()} ${today.getMonth() + 1}-р сар`;\n      this.signupData.email = email;\n      this.signupData.password = password;\n    }\n    //Start loading\n    this.isLoading = true;\n\n    //Login or signup using firebase authentication\n    let authObs: Observable<AuthResponseData>;\n\n    if (this.isLogIn) {\n      authObs = this.authService.login(email, password);\n    } else {\n      authObs = this.authService.signup(this.signupData.userName, email, password);\n    }\n    authObs.subscribe(\n      resData => {\n        //On Valid authentication, if it is signup form, save username to database \n        if (!this.isLogIn) {\n          console.log(this.signupData);\n          this.authService.saveSignupData(this.signupData);\n        }\n        console.log(resData);\n        this.authService.setUserName(resData.displayName);\n        this.authForm.reset();\n        this.isLoading = false;\n        this.router.navigate(['']);\n      },\n      errorMessage => {\n        console.log(errorMessage);\n        this.error = errorMessage;\n        this.authForm.reset();\n        this.isLoading = false;\n      }\n    );\n  }\n}\n","<div *ngIf=\"isLoading\">\n  <app-loading-dots></app-loading-dots>\n</div>\n<app-head-error *ngIf=\"accessDeniedError\"></app-head-error>\n<div [ngClass]=\"(accessDeniedError) ? 'auth-container auth-container--withError' : 'auth-container'\">\n  <form [formGroup]=\"authForm\" class=\"auth-form\" (ngSubmit)=\"onSubmit()\" spellcheck=\"false\">\n    <img src=\"../../assets/img/user.svg\" alt=\"\" class=\"userLogo\">\n    <h2 class=\"heading-secondary auth-form__header\">{{isLogIn === true ? \"Тавтай морилнуу\" : \"Бүртгүүлэх\"}}</h2>\n\n    <!--- LOGIN INPUTS -->\n    <div *ngIf=\"isLogIn\" class=\"auth-form__inputs\">\n      <div class=\"auth-form__emailInput\">\n        <input type=\"text\" class=\"auth-form__input\" placeholder=\"Эмэйл\" formControlName=\"email\">\n        <ul *ngIf=\"!this.authForm.get('email').valid && this.authForm.get('email').touched\" class=\"auth-form__inputErrors\">\n          <li class=\"auth-form__inputError error-text\">Байж болох эмэйл хаяг\n            оруулна уу.</li>\n        </ul>\n      </div>\n      <div class=\"auth-form__passwordContainer\">\n        <input [type]=\"passwordShow === true ? 'text' : 'password'\" class=\"auth-form__input auth-form__passwordInput\"\n          placeholder=\"Нууц Үг\" formControlName=\"password\">\n        <a (click)=\"togglePasswordVisibility()\"><img\n            [src]=\"passwordShow === true ? '../../assets/img/eye.svg' : '../../assets/img/hidden.svg'\" alt=\"\"\n            class=\"auth-form__hidden\"></a>\n      </div>\n    </div>\n\n    <!--- SINGUP INPUTS -->\n    <div *ngIf=\"!isLogIn\" class=\"auth-form__inputs\">\n      <div class=\"auth-form__userNameContainer\">\n        <input type=\"text\" class=\"auth-form__input\" placeholder=\"Бусдад Харагдах Нэр\" maxlength=\"15\"\n          formControlName=\"userName\">\n        <img *ngIf=\"checkingUserName\" src=\"../../assets/img/spinner.svg\" class=\"auth-form__spinner\" alt=\"\">\n      </div>\n      <ul class=\"auth-form__inputErrors\"\n        *ngIf=\"!this.authForm.get('userName').valid && this.authForm.get('userName').touched\">\n        <li class=\"auth-form__inputError error-text\" *ngIf=\"this.authForm.get('userName').errors?.isNotUniqueUserName\">\n          Энэ нэр аль хэдийнээ ашиглалтад байна, өөр нэр хайж ол нуу.\n        </li>\n        <li class=\"auth-form__inputError error-text\" *ngIf=\"this.authForm.get('userName').errors?.minlength\">6-аас дээш\n          үсэгтэй нэр\n          оруулна уу</li>\n        <li class=\"auth-form__inputError error-text\" *ngIf=\"this.authForm.get('userName').errors?.pattern\">Нэр заавал\n          үсгээр эхэлж, зөвхөн доогуур зураас болон тоо агуулж болно.</li>\n      </ul>\n      <div class=\"auth-form__emailInput\">\n        <input type=\"text\" class=\"auth-form__input\" placeholder=\"Эмэйл\" formControlName=\"email\">\n        <ul *ngIf=\"!this.authForm.get('email').valid && this.authForm.get('email').touched\" class=\"auth-form__inputErrors\">\n          <li class=\"auth-form__inputError error-text\">Байж болох эмэйл хаяг\n            оруулна уу.</li>\n        </ul>\n      </div>\n      <div class=\"auth-form__passwordContainer\">\n        <input [type]=\"passwordShow === true ? 'text' : 'password'\" class=\"auth-form__input auth-form__passwordInput\"\n          placeholder=\"Нууц Үг\" formControlName=\"password\">\n        <a (click)=\"togglePasswordVisibility()\"><img\n            [src]=\"passwordShow === true ? '../../assets/img/eye.svg' : '../../assets/img/hidden.svg'\" alt=\"\"\n            class=\"auth-form__hidden\"></a>\n      </div>\n      <ul class=\"auth-form__inputErrors\" *ngIf=\"!this.authForm.get('password').valid\">\n        <li class=\"auth-form__inputError error-text\" *ngIf=\"this.authForm.get('password').errors?.minlength\">8-аас дээш\n          үсэгтэй нууц үг\n          оруулна уу</li>\n      </ul>\n    </div>\n\n    <button type=\"submit\" class=\"auth-form__submit\"\n      [disabled]=\"!authForm.valid\">{{isLogIn === true ? \"Нэвтрэх\" : \"МБЖ-д нэгд\"}}</button>\n\n    <p class=\"auth-form__submitErrorMessage error-text\" *ngIf=\"error\">{{error}}</p>\n\n    <div class=\"auth-form-textArea\">\n      <label *ngIf=\"isLogIn\" class=\"paragraph checkbox-container checkbox-container__center checkbox-container__blue\">\n        <input (click)=\"rememberMeToggle()\" type=\"checkbox\" class=\"checkbox\">\n        <span class=\"checkmark\"></span>\n        Намайг сана\n      </label>\n      <p *ngIf=\"!isLogIn\" class=\"paragraph\">Бүртгүүлсэнээр МБЖ-ээс имэйл хүлээн авахыг би хүлээн зөвшөөрч байна.</p>\n      <hr class=\"horizontalLine\">\n      <p *ngIf=\"isLogIn; else signUpRedirect\" class=\"auth-form__redirectText\"> Хаяг байхгуй гэж үү? <a\n          class=\"emphasis-link\" routerLink=\"/auth/signUp\">Бүртгүүлэх</a></p>\n    </div>\n  </form>\n</div>\n\n<!--- \nng forms do not allow ng-template inputs to act as validator for the entire form. \nE.g if ng-template text input is invalid, the whole form will still be valid. \nTo fix, use *ngIf twice and not ng templates. \n-->\n\n<ng-template #signUpRedirect>\n  <p class=\"auth-form__redirectText\">Аль хэдийн хаяг байгаа гэж үү? <a class=\"emphasis-link\"\n      routerLink=\"/auth/logIn\">Нэвтрэх</a></p>\n</ng-template>\n","import { HeadErrorComponent } from './../head-error/head-error.component';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from './../shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthComponent } from './auth.component';\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    HeadErrorComponent\n  ],\n  imports: [\n    SharedModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      { path: ':isLogIn', component: AuthComponent },\n    ])\n  ],\n})\nexport class AuthModule { }","import { HeaderErrorService } from './header-error.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-head-error',\n  templateUrl: './head-error.component.html',\n  styleUrls: ['./head-error.component.scss']\n})\nexport class HeadErrorComponent implements OnInit {\n  errorMsg: string;\n\n  constructor(private headerErrorService: HeaderErrorService) { }\n\n  ngOnInit(): void {\n    this.headerErrorService.headerErrorMsg.subscribe(error => {\n      this.errorMsg = error;\n    })\n  }\n}\n","<div class=\"headerError\">\n    <img src=\"../../assets/img/error.svg\" alt=\"\" class=\"headerError__errorImg\">\n    <span class=\"headerError__errorText\">{{errorMsg}}</span>\n</div>\n\n","import {BehaviorSubject } from 'rxjs';\n\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class HeaderErrorService {\n    headerErrorMsg = new BehaviorSubject<string>(null);\n}"],"sourceRoot":"webpack:///"}